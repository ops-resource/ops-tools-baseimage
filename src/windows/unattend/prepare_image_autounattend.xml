<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend">
    <!--
        This file describes the different configuration phases for a windows machine.

        For more information about the different stages see: https://technet.microsoft.com/en-us/library/hh824982.aspx
    -->

    <!--
         Many aspects of the installation process can be automated during the windowsPE configuration pass. In this pass you can configure:
         * Windows PE options: These options can include specifying the location of the Windows PE log file, which enables networking or a
           Windows PE page file.

         * Windows Setup options: These options can include specifying the Windows image to install and configuring a disk on the destination computer.

        During this configuration pass, the Windows image is copied to the destination computer after the settings in the windowsPE configuration pass
        are processed.

        If your installation of Windows PE requires boot-critical drivers to access the local hard disk drive or a network, use this configuration pass
        to add drivers to the Windows PE driver store and to reflect the required boot-critical drivers
    -->
    <settings pass="windowsPE">
        <component
            language="neutral"
            name="Microsoft-Windows-International-Core-WinPE"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <InputLocale>en-us</InputLocale>
            <SetupUILanguage>
                <UILanguage>en-us</UILanguage>
            </SetupUILanguage>
            <SystemLocale>en-us</SystemLocale>
            <UILanguage>en-us</UILanguage>
            <UserLocale>en-us</UserLocale>
        </component>

        <component
            language="neutral"
            name="Microsoft-Windows-Setup"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <DiskConfiguration>
                <Disk wcm:action="add">
                    <!--
                        Create the partitions for an UEFI-based computer (see here: https://technet.microsoft.com/en-us/library/cc765950(v=ws.10).aspx)
                        UEFI-based computers need the following partitions:

                        - Unified Extensible Firmware Interface System partition (ESP)
                        - Microsoft Reserved Partition (MSR) if GTP disks are used
                        - OS partition
                    -->
                    <CreatePartitions>
                        <CreatePartition wcm:action="add">
                            <Order>1</Order>
                            <Size>200</Size>
                            <Type>EFI</Type>
                        </CreatePartition>
                        <CreatePartition wcm:action="add">
                            <Order>2</Order>
                            <Size>128</Size>
                            <Type>MSR</Type>
                        </CreatePartition>
                        <CreatePartition wcm:action="add">
                            <Extend>true</Extend>
                            <Order>3</Order>
                            <Type>Primary</Type>
                        </CreatePartition>
                    </CreatePartitions>
                    <DiskID>0</DiskID>
                    <ModifyPartitions>
                        <ModifyPartition wcm:action="add">
                            <Format>FAT32</Format>
                            <Label>Boot</Label>
                            <Order>1</Order>
                            <PartitionID>1</PartitionID>
                        </ModifyPartition>
                        <ModifyPartition wcm:action="add">
                            <Order>2</Order>
                            <PartitionID>2</PartitionID>
                        </ModifyPartition>
                        <ModifyPartition wcm:action="add">
                            <Format>NTFS</Format>
                            <Label>Windows</Label>
                            <Order>3</Order>
                            <PartitionID>3</PartitionID>
                        </ModifyPartition>
                    </ModifyPartitions>
                    <WillWipeDisk>true</WillWipeDisk>
                </Disk>
            </DiskConfiguration>
            <ImageInstall>
                <OSImage>
                    <InstallFrom>
                        <MetaData wcm:action="add">
                            <Key>/IMAGE/NAME </Key>
                            <Value>${WindowsImage}</Value>
                        </MetaData>
                    </InstallFrom>
                    <InstallTo>
                        <DiskID>0</DiskID>
                        <PartitionID>3</PartitionID>
                    </InstallTo>
                </OSImage>
            </ImageInstall>
            <UserData>
                <AcceptEula>true</AcceptEula>
                <FullName>${CompanyName}</FullName>
                <Organization>${CompanyName}</Organization>
                <ProductKey>
                    <!--
                        Set the generic AVMA key so that the VM is automatically activated against
                        the Hyper-V host server license.
                        See here: https://technet.microsoft.com/en-nz/library/dn303421.aspx
                        and here: http://terrytlslau.tls1.cc/2014/02/automatic-virtual-machine-activation.html
                        and here: https://technet.microsoft.com/en-us/library/jj612867.aspx#Windows%20Server%202016
                    -->
                    <Key>${ProductKey}</Key>
                    <WillShowUI>Never</WillShowUI>
                </ProductKey>
            </UserData>
        </component>
    </settings>

    <!--
        Applies updates to a Windows image. Also applies packages, including software fixes, language packs, and other
        security updates.

        During this pass, you can add drivers to a Windows image before that image is installed and processes out-of-box
        device drivers during Windows Setup.
    -->
    <settings pass="offlineServicing">
        <component
            name="Microsoft-Windows-LUA-Settings"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <!-- Disable UAC -->
            <EnableLUA>false</EnableLUA>
        </component>
    </settings>

    <!--
         During this configuration pass, computer-specific information is removed from the Windows installation enabling you to
         capture and reapply the Windows image to different computers. For example, during this pass, the unique security ID (SID),
         unique device drivers, and other hardware-specific settings are removed from the image.

        This configuration pass enables you to minimally configure the sysprep /generalize command, in addition to configuring other Windows
        settings that must persist on your master image.

        After the generalize pass finishes, the next time that Windows image boots, the specialize configuration pass runs. If you want to
        retain the unique device drivers that are installed to your Windows installation, you can use the
        Microsoft-Windows-PnpSysprep | PersistAllDeviceInstalls setting. If this setting is configured, unique device drivers are not
        removed from the installation.
    -->
    <settings pass="generalize">
        <component
            name="Microsoft-Windows-PnpSysprep"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <PersistAllDeviceInstalls>true</PersistAllDeviceInstalls>
        </component>
    </settings>

    <!--
         This configuration pass is used to create and configure information in the Windows image, and is specific to the hardware that the
         Windows image is installing to.

        After the Windows image boots for the first time, the specialize configuration pass runs. During this pass, unique security IDs (SIDs)
        are created. Additionally, you can configure many Windows features, including network settings, international settings, and domain information.
        The answer file settings for the specialize pass appear in audit mode. When a computer boots to audit mode, the auditSystem pass runs, and
        the computer processes the auditUser settings.
    -->
    <settings pass="specialize">

        <!--
            Turns off Windows Error Reporting
        -->
        <component
            name="Microsoft-Windows-ErrorReportingCore"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <DisableWER>1</DisableWER>
        </component>

        <!--
            Configure
        -->
        <component
            name="Microsoft-Windows-Deployment"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <RunSynchronous>
                <!-- Set powershell execution policy to be 'RemoteSigned' -->
                <RunSynchronousCommand wcm:action="add">
                    <Description>Set Execution Policy 64 Bit</Description>
                    <Order>1</Order>
                    <Path>cmd /c > c:\windows\temp\01-PowershellExecutionPolicy64.txt 2>$1 (powershell -Command "$ErrorActionPreference = 'Stop';$ProgressPreference='SilentlyContinue';Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force")</Path>
                </RunSynchronousCommand>
                <RunSynchronousCommand wcm:action="add">
                    <Description>Set Execution Policy 32 Bit</Description>
                    <Order>2</Order>
                    <Path>c:\windows\SysWOW64\cmd.exe /c > c:\windows\temp\02_PowershellExecutionPolicy32.txt 2>$1 (powershell -Command "$ErrorActionPreference = 'Stop';$ProgressPreference='SilentlyContinue';Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force")</Path>
                </RunSynchronousCommand>
            </RunSynchronous>
        </component>

        <!--
            Set the computer name and the owner
        -->
        <component
            name="Microsoft-Windows-Shell-Setup"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <RegisteredOwner>${CompanyName}</RegisteredOwner>
            <ComputerName>${MachineName}</ComputerName>

            <!--
                Set the generic AVMA key so that the VM is automatically activated against
                the Hyper-V host server license.
                See here: https://technet.microsoft.com/en-nz/library/dn303421.aspx
                and here: http://terrytlslau.tls1.cc/2014/02/automatic-virtual-machine-activation.html
            -->
            <ProductKey>${ProductKey}</ProductKey>
        </component>

        <!--
            Set the TCP/IP configuration for the network interface
        -->
        <component
            name="Microsoft-Windows-TCPIP"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <Interfaces>
                <Interface wcm:action="add">
                    <Ipv4Settings>
                        <DhcpEnabled>true</DhcpEnabled>
                        <RouterDiscoveryEnabled>true</RouterDiscoveryEnabled>
                    </Ipv4Settings>
                    <Ipv6Settings>
                        <DhcpEnabled>false</DhcpEnabled>
                        <RouterDiscoveryEnabled>true</RouterDiscoveryEnabled>
                    </Ipv6Settings>
                    <Identifier>Ethernet</Identifier>
                </Interface>
            </Interfaces>
        </component>

        <!--
            Set the primairy DNS to point to the domain DNS server
        -->
        <component
            name="Microsoft-Windows-DNS-Client"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <Interfaces>
                <Interface wcm:action="add">
                    <DNSServerSearchOrder>
                        <IpAddress wcm:action="add" wcm:keyValue="1">${DnsIPAddresses}</IpAddress>
                    </DNSServerSearchOrder>
                    <Identifier>Ethernet</Identifier>
                </Interface>
            </Interfaces>
        </component>

        <!--
            Set the Server Manager to not automatically open on user log in
        -->
        <component
            name="Microsoft-Windows-ServerManager-SvrMgrNc"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <DoNotOpenServerManagerAtLogon>true</DoNotOpenServerManagerAtLogon>
        </component>

        <!--
            Disable remote desktop
        -->
        <component
            name="Microsoft-Windows-TerminalServices-LocalSessionManager"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <fDenyTSConnections>true</fDenyTSConnections>
        </component>

        <component
            name="Microsoft-Windows-Security-SPP-UX"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <SkipAutoActivation>true</SkipAutoActivation>
        </component>
    </settings>


    <!--
        During this configuration pass, settings are applied to Windows before Windows Welcome starts.
        This pass is typically used to configure Windows Shell options, create user accounts, and specify language and
        locale settings. The answer file settings for the oobeSystem pass appear in Windows Welcome, also known as OOBE.
    -->
    <settings pass="oobeSystem">
        <component
            name="Microsoft-Windows-Shell-Setup"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <!--
                Create a local user and automatically log it on. This needs to be done so that we can install
                the updates.
            -->
            <AutoLogon>
                <Enabled>true</Enabled>
                <LogonCount>100</LogonCount>
                <Password>
                    <PlainText>true</PlainText>
                    <Value>${LocalAdministratorPassword}</Value>
                </Password>
                <Username>Administrator</Username>
            </AutoLogon>
            <CopyProfile>false</CopyProfile>
            <FirstLogonCommands>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\03-DisableNetworkPrompt.txt 2>$1 (reg add "HKLM\System\CurrentControlSet\Control\Network\NewNetworkWindowOff" /f)</CommandLine>
                    <Description>Network prompt</Description>
                    <Order>3</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\04-ChangeNetworkToPrivate.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Set-NetworkLocationToPrivate.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Set-NetworkLocationToPrivate.ps1 ))</CommandLine>
                    <Description>Fix public network</Description>
                    <Order>4</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>

                <!-- WINRM SETTINGS -->
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\5-ConfigureWinRM.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Set-WinRM.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Set-WinRM.ps1 )) </CommandLine>
                    <Description>Configure WinRm</Description>
                    <Order>5</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>

                <!-- FIREWALL SETTINGS -->
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\30-FirewallEnableWinRM.txt 2>$1 (netsh advfirewall firewall set rule group="remote administration" new enable=yes)</CommandLine>
                    <Description>Win RM adv firewall enable</Description>
                    <Order>30</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\31-FirewallOpenWinRMPort5985-AddRule.txt 2>$1 (netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow) </CommandLine>
                    <Description>Win RM port open</Description>
                    <Order>31</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\32-FirewallOpenWinRMPort5985-AddPort.txt 2>$1 (netsh firewall add portopening TCP 5985 "Port 5985")  </CommandLine>
                    <Description>Win RM port open</Description>
                    <Order>32</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\33-FirewallOpenWinRMPort5986-AddRule.txt 2>$1 (netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow)</CommandLine>
                    <Description>Win RM port open</Description>
                    <Order>33</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\34-FirewallOpenWinRMPort5986-AddPort.txt 2>$1 (netsh firewall add portopening TCP 5986 "Port 5986") </CommandLine>
                    <Description>Win RM port open</Description>
                    <Order>34</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\35-FirewallAllowPing.txt 2>$1 (netsh advfirewall firewall add rule name="ICMP Allow incoming V4 echo request" protocol=icmpv4:8,any dir=in action=allow) </CommandLine>
                    <Description>ICMP open for ping</Description>
                    <Order>35</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>

                <!-- WINDOWS SETTINGS -->
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\54-ZeroHibernateFile.txt 2>$1 (reg ADD HKLM\SYSTEM\CurrentControlSet\Control\Power\ /v HibernateFileSizePercent /t REG_DWORD /d 0 /f)</CommandLine>
                    <Order>54</Order>
                    <Description>Zero Hibernation File</Description>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\55-DisableHibernate.txt 2>$1 (reg ADD HKLM\SYSTEM\CurrentControlSet\Control\Power\ /v HibernateEnabled /t REG_DWORD /d 0 /f)</CommandLine>
                    <Order>55</Order>
                    <Description>Disable Hibernation Mode</Description>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>

                <!-- WITH WINDOWS UPDATES -->
                <!--
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\96-ConfigureWSUSServer.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Set-ClientWSUSSetting.task.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Set-ClientWSUSSetting.task.ps1 ))</CommandLine>
                    <Order>96</Order>
                    <Description>Configure WSUS Server</Description>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                -->
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\97-TurnOffPowerSavingAndTimeouts.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Set-PowerConfig.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Set-PowerConfig.ps1 ))</CommandLine>
                    <Order>97</Order>
                    <Description>Turn off all power saving and timeouts</Description>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\98-EnableMicrosoftUpdates.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Enable-MicrosoftUpdates.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Enable-MicrosoftUpdates.ps1 ))</CommandLine>
                    <Order>98</Order>
                    <Description>Enable Microsoft Updates</Description>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
                <SynchronousCommand wcm:action="add">
                    <CommandLine>cmd /c > c:\windows\temp\99-InstallWindowsUpdates.txt 2>$1 (FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\Invoke-WindowsUpdate.ps1 (powershell -executionpolicy bypass -noprofile -File %i:\Invoke-WindowsUpdate.ps1 ))</CommandLine>
                    <Description>Install Windows Updates</Description>
                    <Order>99</Order>
                    <RequiresUserInput>true</RequiresUserInput>
                </SynchronousCommand>
            </FirstLogonCommands>
            <OOBE>
                <HideEULAPage>true</HideEULAPage>
                <HideLocalAccountScreen>true</HideLocalAccountScreen>
                <HideOEMRegistrationScreen>true</HideOEMRegistrationScreen>
                <HideOnlineAccountScreens>true</HideOnlineAccountScreens>
                <HideWirelessSetupInOOBE>true</HideWirelessSetupInOOBE>
                <ProtectYourPC>3</ProtectYourPC>
                <NetworkLocation>Work</NetworkLocation>
            </OOBE>
            <TimeZone>New Zealand Standard Time</TimeZone>
            <UserAccounts>
                <AdministratorPassword>
                    <Value>${LocalAdministratorPassword}</Value>
                    <PlainText>true</PlainText>
                </AdministratorPassword>
            </UserAccounts>
            <WindowsFeatures>
                <ShowInternetExplorer>true</ShowInternetExplorer>
                <ShowMediaCenter>false</ShowMediaCenter>
                <ShowWindowsMediaPlayer>false</ShowWindowsMediaPlayer>
            </WindowsFeatures>
        </component>

        <!--
            Set the locale's
        -->
        <component
            name="Microsoft-Windows-International-Core"
            processorArchitecture="amd64"
            publicKeyToken="31bf3856ad364e35"
            language="neutral"
            versionScope="nonSxS"
            xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <InputLocale>1409:00000409</InputLocale>
            <SystemLocale>en-NZ</SystemLocale>
            <UILanguage>en-NZ</UILanguage>
            <UserLocale>en-NZ</UserLocale>
            <UILanguageFallback>en-US</UILanguageFallback>
        </component>
    </settings>
</unattend>
